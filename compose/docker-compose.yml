# this docker compose is compatible with Adaptive release >= 0.5.0
name: adaptive

include:
  - ./monitoring/compose.yml

services:
  db:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=adaptive
      - POSTGRES_DB=adaptive
    restart: on-failure
    labels:
      ingest_adaptive_logs: true
    volumes:
      - ${DB_DATA_HOST_PATH:-./db_data}:/var/lib/postgresql/data

  volume-init:
    image: alpine
    command:
      [
        "sh",
        "-c",
        "chmod -R 777 /model_registry && chown -R 1002:1002 /shared /workdir",
      ]
    volumes:
      - ${MODEL_REGISTRY_HOST_PATH:-./model_registry}:/model_registry
      - ./shared:/shared
      - ./workdir:/workdir
    restart: "no"

  harmony:
    container_name: harmony
    runtime: nvidia
    image: ${HARMONY_IMAGE_REPO:-${IMAGE_REPO}}:${HARMONY_IMAGE_TAG}
    depends_on:
      volume-init:
        condition: service_completed_successfully
    environment:
      - ORDINAL=0
      - MASTER_ADDR=127.0.0.1
      - WORLD_SIZE=${GPU_COUNT:-1}
      - GPU_COUNT=${GPU_COUNT:-1}
      - HARMONY_SETTINGS_SHARED_MASTER_WORKER_FOLDER=/shared
      - HARMONY_SETTING_WORKING_DIR=/workdir
      - HARMONY_SETTING_MODEL_REGISTRY_ROOT=/model_registry
      - GROUP=default
      - PARTITION_KEY=default-partition
      - CONTROL_PLANE_URL=http://control-plane:9009
      - SERVICE_URL=http://harmony:50053
    shm_size: 2g
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    volumes:
      - ${MODEL_REGISTRY_HOST_PATH:-./model_registry}:/model_registry
      - ./shared:/shared
      - ./workdir:/workdir
    ports:
      - 50053:50053
    restart: on-failure
    labels:
      ingest_adaptive_logs: true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:50053/ls || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  control-plane:
    depends_on:
      volume-init:
        condition: service_completed_successfully
    container_name: control-plane
    image: ${CONTROL_PLANE_IMAGE_REPO:-${IMAGE_REPO}}:${CONTROL_PLANE_IMAGE_TAG}
    ports:
      - 9000:9000
    volumes:
      - ./shared:/shared
    environment:
      - ADAPTIVE_APP__SECRET=${APP_SECRET}
      - ADAPTIVE_AUTH__ADMINS=${ADMINS}
      - ADAPTIVE_AUTH__DEFAULT_TEAM=default
      - ADAPTIVE_AUTH__DEFAULT_ROLE=admin
      - ADAPTIVE_AUTH__SESSION__SECURE=true
      - ADAPTIVE_AUTH__SESSION__EXPIRATION_SECONDS=518400
      - ADAPTIVE_AUTH__OIDC__PROVIDERS=${OIDC_PROVIDERS}
      - ADAPTIVE_DB__RUN_MIGRATIONS=true
      - ADAPTIVE_DB__URL=${DB_URL:-postgresql://adaptive:${DB_PASSWORD}@db:5432/adaptive}
      - ADAPTIVE_HTTP_CLIENT__TIMEOUT_SECS=90
      - ADAPTIVE_SERVER__BIND=0.0.0.0:9000
      - ADAPTIVE_SERVER__BIND_INTERNAL=0.0.0.0:9009
      - ADAPTIVE_SERVER__ROOT_URL=${ROOT_URL}
      - ADAPTIVE_HARMONY__URL=http://harmony:50053
      - ADAPTIVE_HARMONY__SHARED_DIRECTORY__PATH=/shared
      - ADAPTIVE_GRAFANA__URL=http://grafana:3000
      - ADAPTIVE_APP__ENABLE_GQL_SCHEMA_INTROSPECTION=${ENABLE_GQL_INTROSPECTION:-false}
    restart: on-failure
    labels:
      ingest_adaptive_logs: true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
